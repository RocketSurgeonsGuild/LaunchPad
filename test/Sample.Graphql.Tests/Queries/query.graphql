query GetLaunchRecords {
    launchRecords(first: 50) {
        nodes {
            id
            rocket {
                id
                type
                serialNumber
            }
            payload
            payloadWeightKg
            actualLaunchDate
            scheduledLaunchDate
        }
    }
}

query GetFilteredLaunchRecords($rocketType: RocketType!) {
    launchRecords(where: { rocket: { type: { eq: $rocketType } } }, first: 50) {
        nodes {
            id
            rocket {
                id
                type
                serialNumber
            }
            payload
            payloadWeightKg
            actualLaunchDate
            scheduledLaunchDate
        }
    }
}
query GetLaunchRecord($id: UUID) {
    launchRecords(where: { id: { eq: $id } }, first: 1) {
        nodes {
            id
            rocket {
                id
                type
                serialNumber
            }
            partner
            payload
            payloadWeightKg
            actualLaunchDate
            scheduledLaunchDate
        }
    }
}

query GetRockets {
    rockets(first: 50) {
        nodes {
            id
            serialNumber
            type
            launchRecords {
                partner
            }
        }
    }
}

query GetFilteredRockets($rocketType: RocketType) {
    rockets(where: {type: { eq: $rocketType } }, first: 50) {
        nodes {
            id
            serialNumber
            type
            launchRecords {
                partner
            }
        }
    }
}

query GetRocket($id: UUID) {
    rockets(where: { id: { eq: $id } }, first: 1) {
        nodes {
            id
            serialNumber
            type
            launchRecords {
                partner
            }
        }
    }
}

query GetNodaTimeTypes($inputs: NodaTimeInputsInput!) {
    nodaTimeTest(inputs: $inputs) {
        isoDayOfWeek
        offset
        period
        zonedDateTime
        offsetTime
        offsetDateTime
        localTime
        localDateTime
        localDate
        instant
        duration
    }
}

query GetGeometryTypes($inputs: GeometryInputsInput!) {
    geometryTest(inputs: $inputs) {
        geometry
        point {
            bbox
            coordinates
            crs
            type
        }
        lineString {
            bbox
            coordinates
            crs
            type
        }
        polygon {
            bbox
            coordinates
            crs
            type
        }
        multiPoint {
            bbox
            coordinates
            crs
            type
        }
        multiLineString {
            bbox
            coordinates
            crs
            type
        }
        multiPolygon {
            bbox
            coordinates
            crs
            type
        }
    }
}
